{"ast":null,"code":"export default {\n  name: 'About',\n  methods: {\n    onClick() {\n      this.$router.push({\n        name: 'CreateArticle'\n      });\n    }\n\n  },\n\n  created() {\n    console.log(this.$route.query);\n  },\n\n  beforeRouteEnter(to, from, next) {\n    console.log('beforeRouteEnter');\n    next(); // called before the route that renders this component is confirmed.\n    // does NOT have access to `this` component instance,\n    // because it has not been created yet when this guard is called!\n  },\n\n  beforeRouteUpdate(to, from, next) {\n    console.log('beforeRouteUpdate');\n    next(); // called when the route that renders this component has changed.\n    // This component being reused (by using an explicit `key`) in the new route or not doesn't change anything.\n    // For example, for a route with dynamic params `/foo/:id`, when we\n    // navigate between `/foo/1` and `/foo/2`, the same `Foo` component instance\n    // will be reused (unless you provided a `key` to `<router-view>`), and this hook will be called when that happens.\n    // has access to `this` component instance.\n  },\n\n  beforeRouteLeave(to, from, next) {\n    console.log('beforeRouteLeave');\n    next(); // called when the route that renders this component is about to\n    // be navigated away from.\n    // has access to `this` component instance.\n  }\n\n};","map":{"version":3,"mappings":"AAqBA;EACAA,aADA;EAEAC;IACAC;MACA;QACAF;MADA;IAGA;;EALA,CAFA;;EASAG;IACAC;EACA,CAXA;;EAYAC;IACAD;IACAE,OAFA,CAGA;IACA;IACA;EACA,CAlBA;;EAmBAC;IACAH;IACAE,OAFA,CAGA;IACA;IACA;IACA;IACA;IACA;EACA,CA5BA;;EA6BAE;IACAJ;IACAE,OAFA,CAGA;IACA;IACA;EACA;;AAnCA","names":["name","methods","onClick","created","console","beforeRouteEnter","next","beforeRouteUpdate","beforeRouteLeave"],"sourceRoot":"src/modules/article/views","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    List Article\n    <div>\n      <router-link :to=\"{ name : 'Article', query : { name : 'abcd'}}\">\n          update link\n      </router-link>\n    </div>\n    <div>\n      <router-link :to=\"{ name : 'CreateArticle'}\">\n          CreateArticle\n      </router-link>\n      <button @click=\"onClick\">\n         CreateArticle\n      </button>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  export default {\n    name : 'About',\n    methods:{\n      onClick(){\n        this.$router.push({\n          name : 'CreateArticle'\n        })\n      }\n    },\n    created(){\n      console.log(this.$route.query);\n    },\n    beforeRouteEnter(to, from, next) {\n      console.log('beforeRouteEnter');\n      next()\n      // called before the route that renders this component is confirmed.\n      // does NOT have access to `this` component instance,\n      // because it has not been created yet when this guard is called!\n    },\n    beforeRouteUpdate(to, from, next) {\n      console.log('beforeRouteUpdate');\n      next()\n      // called when the route that renders this component has changed.\n      // This component being reused (by using an explicit `key`) in the new route or not doesn't change anything.\n      // For example, for a route with dynamic params `/foo/:id`, when we\n      // navigate between `/foo/1` and `/foo/2`, the same `Foo` component instance\n      // will be reused (unless you provided a `key` to `<router-view>`), and this hook will be called when that happens.\n      // has access to `this` component instance.\n    },\n    beforeRouteLeave(to, from, next) {\n      console.log('beforeRouteLeave');\n      next()\n      // called when the route that renders this component is about to\n      // be navigated away from.\n      // has access to `this` component instance.\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}