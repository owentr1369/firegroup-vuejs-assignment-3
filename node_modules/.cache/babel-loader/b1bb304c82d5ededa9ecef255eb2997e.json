{"ast":null,"code":"import { mapGetters, mapMutations, mapState, mapActions } from 'vuex';\nexport default {\n  name: 'Dashboard',\n\n  data() {\n    return {\n      is_loading: true,\n      is_error: false\n    };\n  },\n\n  computed: { ...mapGetters({\n      isLogged: 'auth/isLogged',\n      user: 'auth/getUser'\n    })\n  },\n  methods: { ...mapActions({\n      getUserInfo: 'auth/fetchUser'\n    }),\n\n    onClick() {\n      this.updateUser({\n        name: 'XYZ',\n        age: 25\n      });\n    }\n\n  },\n\n  async created() {\n    try {\n      let res = await this.getUserInfo({\n        id: 15\n      });\n    } catch (error) {\n      this.is_error = true;\n    }\n\n    this.is_loading = false;\n  }\n\n};","map":{"version":3,"mappings":"AAqBA;AACA;EACAA,iBADA;;EAEAC;IACA;MACAC,gBADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC,YACA;MACAC,yBADA;MAEAC;IAFA;EADA,CARA;EAcAC,WACA;MACAC;IADA,EADA;;IAIAC;MACA;QACAT,WADA;QAEAU;MAFA;IAIA;;EATA,CAdA;;EAyBA;IACA;MACA;QAAAC;MAAA;IACA,CAFA,CAEA;MACA;IACA;;IACA;EACA;;AAhCA","names":["name","data","is_loading","is_error","computed","isLogged","user","methods","getUserInfo","onClick","age","id"],"sourceRoot":"src/modules/dashboard/views","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n      <div v-if=\"is_loading\">\n        loading ...\n      </div>\n      <div v-else> \n        <template v-if=\"is_error\">\n          <div>\n            error\n          </div>\n        </template>\n        <template v-else>\n          <div>\n            {{ user }}\n          </div>\n        </template>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations, mapState, mapActions } from 'vuex'\n  export default {\n    name : 'Dashboard',\n    data(){\n      return {\n        is_loading : true,\n        is_error : false \n      }\n    },\n    computed:{\n      ...mapGetters({\n        isLogged : 'auth/isLogged',\n        user: 'auth/getUser'\n      })\n    },\n    methods:{\n      ...mapActions({\n        getUserInfo : 'auth/fetchUser'\n      }),\n      onClick(){\n        this.updateUser({\n          name : 'XYZ',\n          age: 25\n        })\n      }\n    },\n    async  created(){\n      try {\n        let res = await this.getUserInfo({ id :15})\n      } catch (error) {\n        this.is_error = true\n      }\n      this.is_loading = false \n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}